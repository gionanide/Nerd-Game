/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nerdgame;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.Timer;
import static nerdgame.PracticeDifficultyGUI.FirstQuestionID;
import static nerdgame.PracticeDifficultyGUI.correctanswerflag;
import static nerdgame.PracticeDifficultyGUI.difficulty_level;
import static nerdgame.PracticeDifficultyGUI.rs;
import nerdgame.ProfileGUI;
/**
 *
 * @author aggeliki
 */
public class ModeGUI extends javax.swing.JFrame {

    
    //initialize connections with database
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    
    //initialize connections with database only for ranked game's mode
    public static ResultSet rsRanked = null;
    Connection conRanked = null;
    PreparedStatement pstRanked = null;
    
   
    //mouse events
    public ModeGUI() {
        initComponents();
        
        PracticeButton.setToolTipText("Excercise your skills. No time limit.");
        
        RankedButton.setToolTipText("Compete against others on the leaderboard (time is a foe).");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PracticeButton = new javax.swing.JButton();
        RankedButton = new javax.swing.JButton();
        DisconnectButton = new javax.swing.JButton();
        ProfileButton = new javax.swing.JButton();
        LeaderboardButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Game Mode");
        getContentPane().setLayout(null);

        PracticeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ModeGUI/Practice_Default.png"))); // NOI18N
        PracticeButton.setBorderPainted(false);
        PracticeButton.setContentAreaFilled(false);
        PracticeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PracticeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PracticeButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PracticeButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PracticeButtonMouseReleased(evt);
            }
        });
        PracticeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PracticeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(PracticeButton);
        PracticeButton.setBounds(150, 230, 110, 40);

        RankedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ModeGUI/Ranked_Default.png"))); // NOI18N
        RankedButton.setBorderPainted(false);
        RankedButton.setContentAreaFilled(false);
        RankedButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RankedButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RankedButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RankedButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RankedButtonMouseReleased(evt);
            }
        });
        RankedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RankedButtonActionPerformed(evt);
            }
        });
        getContentPane().add(RankedButton);
        RankedButton.setBounds(150, 310, 110, 40);

        DisconnectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ModeGUI/Dc.png"))); // NOI18N
        DisconnectButton.setBorderPainted(false);
        DisconnectButton.setContentAreaFilled(false);
        DisconnectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DisconnectButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DisconnectButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DisconnectButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                DisconnectButtonMouseReleased(evt);
            }
        });
        DisconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisconnectButtonActionPerformed(evt);
            }
        });
        getContentPane().add(DisconnectButton);
        DisconnectButton.setBounds(20, 430, 110, 25);

        ProfileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ModeGUI/Profile.png"))); // NOI18N
        ProfileButton.setBorderPainted(false);
        ProfileButton.setContentAreaFilled(false);
        ProfileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProfileButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProfileButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ProfileButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ProfileButtonMouseReleased(evt);
            }
        });
        ProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfileButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ProfileButton);
        ProfileButton.setBounds(270, 380, 70, 25);

        LeaderboardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ModeGUI/Rating.png"))); // NOI18N
        LeaderboardButton.setBorderPainted(false);
        LeaderboardButton.setContentAreaFilled(false);
        LeaderboardButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LeaderboardButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LeaderboardButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LeaderboardButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                LeaderboardButtonMouseReleased(evt);
            }
        });
        LeaderboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeaderboardButtonActionPerformed(evt);
            }
        });
        getContentPane().add(LeaderboardButton);
        LeaderboardButton.setBounds(270, 430, 100, 25);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/TestLogo2.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, -10, 330, 200);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mathematics-wallpaper.png"))); // NOI18N
        getContentPane().add(Background);
        Background.setBounds(0, 0, 400, 480);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PracticeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PracticeButtonActionPerformed
        // practice button
        //setVisible(false);
        dispose();
        PracticeDifficultyGUI pdg = new PracticeDifficultyGUI();
        pdg.setVisible(true);
        pdg.setLocationRelativeTo(null);
        
        pdg.setSize(350, 500);
        
        pdg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_PracticeButtonActionPerformed

    private void RankedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RankedButtonActionPerformed
        // next button
        //setVisible(false);
        dispose();
        RankedGamePlay rgp = new RankedGamePlay();
        //begin ranked game play , choose random question from database
        String sql = "SELECT * FROM (SELECT * FROM question ORDER BY rand() LIMIT 6)T1 where (difficulty = 1)";
        
        try
        {
            Class.forName("java.sql.Driver");
            conRanked = DriverManager.getConnection("jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull","root","8520");
            pstRanked = conRanked.prepareStatement(sql);
            //pst.setInt(1,difficulty_level );
            rsRanked = pstRanked.executeQuery();
        }
        catch(Exception e){}
        
        rgp.setSize(550, 550);
        
        int QuestionID;
        
        
        String arr = null;
        int counter=0;
        try 
        {
            while (rsRanked.next()) 
            {
                //flag first question 
                if (counter == 0)
                {
                    FirstQuestionID = rsRanked.getInt("ID");
                }
                counter++;
                QuestionID = rsRanked.getInt("ID");
                //counter++;
                String em = rsRanked.getString("Question");
                arr = em.replace("\n", ",");
                rgp.setQuestion(arr);
                
                
                //Randomize questions
                int randomNum = ThreadLocalRandom.current().nextInt(0,4);
                int x = randomNum;
                int x1=x;
                int x2=x;
                int x3=x;
                
                while(x1==x)
                {
                    randomNum = ThreadLocalRandom.current().nextInt(0,4);
                    x1 = randomNum;
                }
                while(x2==x || x2==x1)
                {
                    randomNum = ThreadLocalRandom.current().nextInt(0,4);
                    x2 = randomNum;
                }
                while(x3==x || x3==x1 || x3==x2)
                {
                    randomNum = ThreadLocalRandom.current().nextInt(0,4);
                    x3 = randomNum;
                }
                
                
                if(x==0)
                {
                    em = rsRanked.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer1Button(arr);
                    correctanswerflag =1;//BUTTON ANSWER 1
                }
                else if(x==1)
                {
                    em = rsRanked.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer2Button(arr);
                    correctanswerflag =2;//BUTTON ANSWER 2
                }
                else if(x==2)
                {
                    em = rsRanked.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer3Button(arr);
                    correctanswerflag =3;//BUTTON ANSWER 3
                }
                else
                {
                    em = rsRanked.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer4Button(arr);
                    correctanswerflag =4;//BUTTON ANSWER 4
                }
                
                if(x1==0)
                {
                    em = rsRanked.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer1Button(arr);
                }
                else if(x1==1)
                {
                    em = rsRanked.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer2Button(arr);
                }
                else if(x1==2)
                {
                    em = rsRanked.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer3Button(arr);
                }
                else
                {
                    em = rsRanked.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer4Button(arr);
                }
                
                if(x2==0)
                {
                    em = rsRanked.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer1Button(arr);
                }
                else if(x2==1)
                {
                    em = rsRanked.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer2Button(arr);
                }
                else if(x2==2)
                {
                    em = rsRanked.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer3Button(arr);
                }
                else
                {
                    em = rsRanked.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer4Button(arr);
                }
                
                if(x3==0)
                {
                    em = rsRanked.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer1Button(arr);
                }
                else if(x3==1)
                {
                    em = rsRanked.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer2Button(arr);
                }
                else if(x3==2)
                {
                    em = rsRanked.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer3Button(arr);
                }
                else
                {
                    em = rsRanked.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    rgp.setAnswer4Button(arr);
                } 
            break;
            }
        }
            catch(Exception e){}
        dispose();
        
        rgp.setVisible(true);
        
        rgp.setSize(500, 540);
        rgp.setLocationRelativeTo(null);
        
        rgp.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        

 
        
    }//GEN-LAST:event_RankedButtonActionPerformed

     
    
    private void DisconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisconnectButtonActionPerformed
        // Disconnect Button
        //setVisible(false);
        dispose();
        GUI gui = new GUI();
        gui.setVisible(true);
        gui.setLocationRelativeTo(null);
        
        gui.setSize(350, 500);
        
        gui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_DisconnectButtonActionPerformed

    private void ProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfileButtonActionPerformed
        // ProfileButton
        //setVisible(false);
        dispose();
        ProfileGUI pgui = new ProfileGUI();
        pgui.setVisible(true);
        pgui.setLocationRelativeTo(null);
        
        String sql = "Select * from user where Username=?";
        
        try
        {
            //communicate with database
            Class.forName("java.sql.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull","root","8520");
            pst = con.prepareStatement(sql);
            pst.setString(1, LoginGUI.un);
            rs = pst.executeQuery();
        }
        catch(Exception e)
        {}
        
        pgui.setSize(350, 500);
        
        
        String arr = null;
      
        try 
        {
            while (rs.next()) //while database returns specifies
            {
                String em = rs.getString("Nickname");
                arr = em.replace("\n", ",");
                pgui.setNickname(arr);
                
                em = rs.getString("University");
                arr = em.replace("\n", ",");
                pgui.setUniversityname(arr);
                
                em = rs.getString("Department");
                arr = em.replace("\n", ",");
                pgui.setDepartmentname(arr);
                
                em = rs.getString("Highscore");
                arr = em.replace("\n", ",");
                pgui.setHighscore(arr);
                
                em = rs.getString("Rating");
                arr = em.replace("\n", ",");
                pgui.setRating(arr);
                
            }
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ModeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        pgui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_ProfileButtonActionPerformed

    private void LeaderboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeaderboardButtonActionPerformed
        // LEADERBOARD BUTTON
        dispose();
        LeaderBoardGUI lgui = new LeaderBoardGUI();
        lgui.setLocationRelativeTo(null);
        lgui.setVisible(true);
        lgui.setSize(900, 600);
        
        String sql = "Select Rating,Nickname,University,Department,Highscore from user ORDER BY Rating ASC";
        
        try
        {
            Class.forName("java.sql.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull","root","8520");
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
        }
        catch(Exception e)
        {}
        
        String arr=null;
        
        try {
            while(rs.next()) //while database returns specifies
            {
                String em = rs.getString("Rating");
                arr = em.replace("\n", ",");
                lgui.setTextArea(arr);
                lgui.setTextArea("  ");
                
                em = rs.getString("Nickname");
                arr = em.replace("\n", ",");
                lgui.setTextArea(arr);
                lgui.setTextArea("  ");
                
                em = rs.getString("University");
                arr = em.replace("\n", ",");
                lgui.setTextArea(arr);
                lgui.setTextArea("  ");
                
                em = rs.getString("Department");
                arr = em.replace("\n", ",");
                lgui.setTextArea(arr);
                lgui.setTextArea("  ");
                
                em = rs.getString("Highscore");
                arr = em.replace("\n", ",");
                lgui.setTextArea(arr);
                lgui.setTextArea("  ");
                
                lgui.setTextArea("\n");
            
            }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(ModeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        String user = "     \n";//write the user at the leaderboard
        lgui.setTextArea(user);
    }//GEN-LAST:event_LeaderboardButtonActionPerformed

    
    
    //IMAGES
    private void PracticeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PracticeButtonMouseEntered
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Practice_Hover.png"));
        PracticeButton.setIcon(pb);
    }//GEN-LAST:event_PracticeButtonMouseEntered

    private void PracticeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PracticeButtonMouseExited
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Practice_Default.png"));
        PracticeButton.setIcon(pb);
    }//GEN-LAST:event_PracticeButtonMouseExited

    private void PracticeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PracticeButtonMousePressed
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Practice_Pressed.png"));
        PracticeButton.setIcon(pb);
    }//GEN-LAST:event_PracticeButtonMousePressed

    private void PracticeButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PracticeButtonMouseReleased
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Practice_Hover.png"));
        PracticeButton.setIcon(pb);
    }//GEN-LAST:event_PracticeButtonMouseReleased

    private void RankedButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RankedButtonMouseEntered
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Ranked_Hover.png"));
        RankedButton.setIcon(pb);
    }//GEN-LAST:event_RankedButtonMouseEntered

    private void RankedButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RankedButtonMouseExited
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Ranked_Default.png"));
        RankedButton.setIcon(pb);
    }//GEN-LAST:event_RankedButtonMouseExited

    private void RankedButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RankedButtonMousePressed
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Ranked_Pressed.png"));
        RankedButton.setIcon(pb);
    }//GEN-LAST:event_RankedButtonMousePressed

    private void RankedButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RankedButtonMouseReleased
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Ranked_Hover.png"));
        RankedButton.setIcon(pb);
    }//GEN-LAST:event_RankedButtonMouseReleased

    private void DisconnectButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DisconnectButtonMouseEntered
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/DcHover.png"));
        DisconnectButton.setIcon(pb);
    }//GEN-LAST:event_DisconnectButtonMouseEntered

    private void DisconnectButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DisconnectButtonMouseExited
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Dc.png"));
        DisconnectButton.setIcon(pb);
    }//GEN-LAST:event_DisconnectButtonMouseExited

    private void DisconnectButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DisconnectButtonMousePressed
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/DcPressed.png"));
        DisconnectButton.setIcon(pb);
    }//GEN-LAST:event_DisconnectButtonMousePressed

    private void DisconnectButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DisconnectButtonMouseReleased
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/DcHover.png"));
        DisconnectButton.setIcon(pb);
    }//GEN-LAST:event_DisconnectButtonMouseReleased

    private void ProfileButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfileButtonMouseEntered
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/ProfileHover.png"));
        ProfileButton.setIcon(pb);
    }//GEN-LAST:event_ProfileButtonMouseEntered

    private void ProfileButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfileButtonMouseExited
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Profile.png"));
        ProfileButton.setIcon(pb);
    }//GEN-LAST:event_ProfileButtonMouseExited

    private void ProfileButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfileButtonMousePressed
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/ProfilePressed.png"));
        ProfileButton.setIcon(pb);
    }//GEN-LAST:event_ProfileButtonMousePressed

    private void ProfileButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfileButtonMouseReleased
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/ProfileHover.png"));
        ProfileButton.setIcon(pb);
    }//GEN-LAST:event_ProfileButtonMouseReleased

    private void LeaderboardButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LeaderboardButtonMouseEntered
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/RatingHover.png"));
        LeaderboardButton.setIcon(pb);
    }//GEN-LAST:event_LeaderboardButtonMouseEntered

    private void LeaderboardButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LeaderboardButtonMouseExited
       ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/Rating.png"));
       LeaderboardButton.setIcon(pb);
    }//GEN-LAST:event_LeaderboardButtonMouseExited

    private void LeaderboardButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LeaderboardButtonMousePressed
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/RatingPressed.png"));
        LeaderboardButton.setIcon(pb);
    }//GEN-LAST:event_LeaderboardButtonMousePressed

    private void LeaderboardButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LeaderboardButtonMouseReleased
        ImageIcon pb = new ImageIcon(getClass().getResource("/Images/ModeGUI/RatingHover.png"));
        LeaderboardButton.setIcon(pb);
    }//GEN-LAST:event_LeaderboardButtonMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModeGUI().setVisible(true);
            }
        });
    }
    private JTextField username;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton DisconnectButton;
    private javax.swing.JButton LeaderboardButton;
    private javax.swing.JButton PracticeButton;
    private javax.swing.JButton ProfileButton;
    private javax.swing.JButton RankedButton;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
