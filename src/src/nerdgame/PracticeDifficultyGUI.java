/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nerdgame;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFrame;
import java.util.concurrent.ThreadLocalRandom;
import nerdgame.PracticeGamePlay;




public class PracticeDifficultyGUI extends javax.swing.JFrame {
    public static int difficulty_level;
    public static int correctanswerflag;//in order to check where the correct answer is(in which radio button)
    public static int FirstQuestionID;// the ID of  questions in game to be inserted in the hashset
    
    
    //initialize connections with database
    Connection con = null;
    public static ResultSet rs = null;
    PreparedStatement pst = null;
    public PracticeDifficultyGUI() 
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        EasyButton = new javax.swing.JRadioButton();
        NormalButton = new javax.swing.JRadioButton();
        MediumButton = new javax.swing.JRadioButton();
        HardButton = new javax.swing.JRadioButton();
        WorldClassButton = new javax.swing.JRadioButton();
        NextButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Set difficulty");

        buttonGroup1.add(EasyButton);
        EasyButton.setText("Easy");
        EasyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EasyButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(NormalButton);
        NormalButton.setText("Normal");
        NormalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NormalButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(MediumButton);
        MediumButton.setText("Medium");
        MediumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MediumButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(HardButton);
        HardButton.setText("Hard");
        HardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HardButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(WorldClassButton);
        WorldClassButton.setText("World Class");
        WorldClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WorldClassButtonActionPerformed(evt);
            }
        });

        NextButton.setText("Next");
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addComponent(NextButton)
                .addGap(136, 136, 136))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(WorldClassButton)
                    .addComponent(HardButton)
                    .addComponent(EasyButton)
                    .addComponent(NormalButton)
                    .addComponent(MediumButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(EasyButton)
                .addGap(18, 18, 18)
                .addComponent(NormalButton)
                .addGap(18, 18, 18)
                .addComponent(MediumButton)
                .addGap(18, 18, 18)
                .addComponent(HardButton)
                .addGap(18, 18, 18)
                .addComponent(WorldClassButton)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // back button
        //setVisible(false);
        dispose();
        ModeGUI modegui = new ModeGUI();
        modegui.setVisible(true);
        
        modegui.setSize(400, 500);
        modegui.setLocationRelativeTo(null);
        
        modegui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        // next button
        //setVisible(false);
        dispose();
        PracticeGamePlay pgp = new PracticeGamePlay();
        String sql = "SELECT * FROM (SELECT * FROM question ORDER BY rand() LIMIT 6)T1 where (difficulty = ?)";
        
        try
        { 
            Class.forName("java.sql.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull","root","8520");
            pst = con.prepareStatement(sql);
            pst.setInt(1,difficulty_level );
            rs = pst.executeQuery();
        }
        catch(Exception e)
        {}
        
        pgp.setSize(500, 540);
        
        int QuestionID;
        
        
        String arr = null;
        int counter=0;
        try {
            while (rs.next()) 
            {
                if (counter == 0)
                {
                    FirstQuestionID = rs.getInt("ID");
                }
                counter++;
                QuestionID = rs.getInt("ID");
                //counter++;
                String em = rs.getString("Question");
                arr = em.replace("\n", ",");
                pgp.setQuestion(arr);
                
                int randomNum = ThreadLocalRandom.current().nextInt(0,4);
                int x = randomNum;
                int x1=x;
                int x2=x;
                int x3=x;
                
                
                //Randomize questions' appearence
                while(x1==x)
                {
                    randomNum = ThreadLocalRandom.current().nextInt(0,4);
                    x1 = randomNum;
                }
                while(x2==x || x2==x1)
                {
                    randomNum = ThreadLocalRandom.current().nextInt(0,4);
                    x2 = randomNum;
                }
                while(x3==x || x3==x1 || x3==x2)
                {
                    randomNum = ThreadLocalRandom.current().nextInt(0,4);
                    x3 = randomNum;
                }
                
                //initiliaze correst question's place
                if(x==0)
                {
                    em = rs.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer(arr);
                    correctanswerflag =1;//BUTTON ANSWER 1
                }
                else if(x==1)
                {
                    em = rs.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer2(arr);
                    correctanswerflag =2;//BUTTON ANSWER 2
                }
                else if(x==2)
                {
                    em = rs.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer3(arr);
                    correctanswerflag =3;//BUTTON ANSWER 3
                }
                else
                {
                    em = rs.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer4(arr);
                    correctanswerflag =4;//BUTTON ANSWER 4
                }
                
                if(x1==0)
                {
                    em = rs.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer(arr);
                }
                else if(x1==1)
                {
                    em = rs.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer2(arr);
                }
                else if(x1==2)
                {
                    em = rs.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer3(arr);
                }
                else
                {
                    em = rs.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer4(arr);
                }
                
                if(x2==0)
                {
                    em = rs.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer(arr);
                }
                else if(x2==1)
                {
                    em = rs.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer2(arr);
                }
                else if(x2==2)
                {
                    em = rs.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer3(arr);
                }
                else
                {
                    em = rs.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer4(arr);
                }
                
                if(x3==0)
                {
                    em = rs.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer(arr);
                }
                else if(x3==1)
                {
                    em = rs.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer2(arr);
                }
                else if(x3==2)
                {
                    em = rs.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer3(arr);
                }
                else
                {
                    em = rs.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    pgp.setAnswer4(arr);
                } 
            break;
            }
        }
            catch(Exception e)
            {}
        dispose();       
        pgp.setVisible(true);
        pgp.setSize(500, 540);
        pgp.setLocationRelativeTo(null);
        pgp.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_NextButtonActionPerformed

    
    //flag the difficuly level
    private void EasyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EasyButtonActionPerformed
        getEasyButton();
    }//GEN-LAST:event_EasyButtonActionPerformed

    private void NormalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NormalButtonActionPerformed
        getNormalButton();
    }//GEN-LAST:event_NormalButtonActionPerformed

    private void MediumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MediumButtonActionPerformed
        getMediumButton();
    }//GEN-LAST:event_MediumButtonActionPerformed

    private void HardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HardButtonActionPerformed
        getHardButton();
    }//GEN-LAST:event_HardButtonActionPerformed

    private void WorldClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WorldClassButtonActionPerformed
        getWorldClassButton();
    }//GEN-LAST:event_WorldClassButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PracticeDifficultyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PracticeDifficultyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PracticeDifficultyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PracticeDifficultyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PracticeDifficultyGUI().setVisible(true);
            }
        });
    }

    //flag difficulty level procedure
    public void getEasyButton()
    {
        if( EasyButton.isSelected())
        {
            difficulty_level=1;
        }
    }
    public void getNormalButton()
    {
        if( NormalButton.isSelected())
        {
            difficulty_level=2;
        }
    }
    public void getMediumButton()
    {
        if( MediumButton.isSelected())
        {
            difficulty_level=3;
        }
    }
    public void getHardButton()
    {
        if( HardButton.isSelected())
        {
            difficulty_level=4;
        }
    }
    public void getWorldClassButton()
    {
        if( WorldClassButton.isSelected())
        {
            difficulty_level=5;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JRadioButton EasyButton;
    private javax.swing.JRadioButton HardButton;
    private javax.swing.JRadioButton MediumButton;
    private javax.swing.JButton NextButton;
    private javax.swing.JRadioButton NormalButton;
    private javax.swing.JRadioButton WorldClassButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
