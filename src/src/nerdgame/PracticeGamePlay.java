/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nerdgame;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashSet;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.Timer;
import static nerdgame.PracticeDifficultyGUI.correctanswerflag;
import static nerdgame.PracticeDifficultyGUI.difficulty_level;




public class PracticeGamePlay extends javax.swing.JFrame {

    public  int counterQuestion = 0;
    public  int correctQuestions = 0;//sum of the correct questions
    
    public PracticeGamePlay() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        QuestionArea = new javax.swing.JLabel();
        Answer2 = new javax.swing.JRadioButton();
        Answer4 = new javax.swing.JRadioButton();
        Answer1 = new javax.swing.JRadioButton();
        Answer3 = new javax.swing.JRadioButton();
        LockAnswerButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        Bg2 = new javax.swing.JLabel();
        Bg4 = new javax.swing.JLabel();
        Bg1 = new javax.swing.JLabel();
        Bg3 = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Practice");
        setMinimumSize(new java.awt.Dimension(500, 500));
        setPreferredSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(null);

        QuestionArea.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        QuestionArea.setText("question");
        getContentPane().add(QuestionArea);
        QuestionArea.setBounds(0, 140, 500, 100);

        buttonGroup1.add(Answer2);
        Answer2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Answer2.setContentAreaFilled(false);
        Answer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Answer2ActionPerformed(evt);
            }
        });
        getContentPane().add(Answer2);
        Answer2.setBounds(330, 270, 160, 30);

        buttonGroup1.add(Answer4);
        Answer4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Answer4.setContentAreaFilled(false);
        Answer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Answer4ActionPerformed(evt);
            }
        });
        getContentPane().add(Answer4);
        Answer4.setBounds(330, 390, 170, 30);

        buttonGroup1.add(Answer1);
        Answer1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Answer1.setContentAreaFilled(false);
        Answer1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Answer1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Answer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Answer1ActionPerformed(evt);
            }
        });
        getContentPane().add(Answer1);
        Answer1.setBounds(0, 270, 160, 30);

        buttonGroup1.add(Answer3);
        Answer3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Answer3.setContentAreaFilled(false);
        Answer3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Answer3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Answer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Answer3ActionPerformed(evt);
            }
        });
        getContentPane().add(Answer3);
        Answer3.setBounds(0, 390, 160, 30);

        LockAnswerButton.setText("Lock Answer");
        LockAnswerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LockAnswerButtonActionPerformed(evt);
            }
        });
        getContentPane().add(LockAnswerButton);
        LockAnswerButton.setBounds(300, 460, 93, 23);

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ExitButton);
        ExitButton.setBounds(40, 460, 51, 23);

        Bg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Questions/Question_Background.png"))); // NOI18N
        Bg2.setText("jLabel2");
        getContentPane().add(Bg2);
        Bg2.setBounds(300, 240, 200, 90);

        Bg4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Questions/Question_Background.png"))); // NOI18N
        Bg4.setText("jLabel1");
        getContentPane().add(Bg4);
        Bg4.setBounds(300, 360, 200, 90);

        Bg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Questions/Question_Background_Left.png"))); // NOI18N
        getContentPane().add(Bg1);
        Bg1.setBounds(-10, 240, 200, 90);

        Bg3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Questions/Question_Background_Left.png"))); // NOI18N
        Bg3.setText("jLabel1");
        getContentPane().add(Bg3);
        Bg3.setBounds(-10, 360, 200, 90);

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/180logo.png"))); // NOI18N
        getContentPane().add(Logo);
        Logo.setBounds(160, 0, 170, 130);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Orange wpp.jpg"))); // NOI18N
        Background.setMinimumSize(new java.awt.Dimension(500, 500));
        Background.setPreferredSize(new java.awt.Dimension(500, 500));
        getContentPane().add(Background);
        Background.setBounds(-10, 0, 510, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Answer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Answer4ActionPerformed
        // BUTTON ASNWER 4
    }//GEN-LAST:event_Answer4ActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // Exit Button
        dispose();
        ModeGUI mgui = new ModeGUI();
        mgui.setVisible(true);
        
        mgui.setSize(400, 500);
        mgui.setLocationRelativeTo(null);
        
        mgui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void Answer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Answer1ActionPerformed
        // BUTTON ASNWER 1
    }//GEN-LAST:event_Answer1ActionPerformed

    private void Answer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Answer2ActionPerformed
        // BUTTON ASNWER 2
    }//GEN-LAST:event_Answer2ActionPerformed

    private void Answer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Answer3ActionPerformed
        // BUTTON ASNWER 3
    }//GEN-LAST:event_Answer3ActionPerformed

    private void LockAnswerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LockAnswerButtonActionPerformed
        // Lock Answer Button
       int choice=0;//player's choice
       
       
       //flag the answer
       if(Answer1.isSelected())
       {
           choice = 1;
       }
       else if(Answer2.isSelected())
       {
           choice = 2;
       }
       else if(Answer3.isSelected())
       {
           choice = 3;
       }
       else if(Answer4.isSelected())
       {
           choice = 4;
       }
       
       
       if(choice == PracticeDifficultyGUI.correctanswerflag)
       {
           correctQuestions++;
       }
       else if(!(choice == 0))
       {}
     
       buttonGroup1.clearSelection();

        
        
        String arr = null;
      
        try {
            while (PracticeDifficultyGUI.rs.next()) 
            { 
                String em = PracticeDifficultyGUI.rs.getString("Question");
                arr = em.replace("\n", ",");
                setQuestion(arr);
                
                
                //randomize questions
                int randomNum = ThreadLocalRandom.current().nextInt(0,4);
                int x = randomNum;
                int x1=x;
                int x2=x;
                int x3=x;
                
                while(x1==x)
                {
                    randomNum = ThreadLocalRandom.current().nextInt(0,4);
                    x1 = randomNum;
                }
                while(x2==x || x2==x1)
                {
                    randomNum = ThreadLocalRandom.current().nextInt(0,4);
                    x2 = randomNum;
                }
                while(x3==x || x3==x1 || x3==x2)
                {
                    randomNum = ThreadLocalRandom.current().nextInt(0,4);
                    x3 = randomNum;
                }
                
                //chech the answer
                if(x==0)
                {
                    em = PracticeDifficultyGUI.rs.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    setAnswer(arr);
                    correctanswerflag =1;//BUTTON ANSWER 1
                }
                else if(x==1)
                {
                    em = PracticeDifficultyGUI.rs.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    setAnswer2(arr);
                    correctanswerflag =2;//BUTTON ANSWER 2
                }
                else if(x==2)
                {
                    em = PracticeDifficultyGUI.rs.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    setAnswer3(arr);
                    correctanswerflag =3;//BUTTON ANSWER 3
                }
                else
                {
                    em = PracticeDifficultyGUI.rs.getString("Answercorrect");
                    arr = em.replace("\n", ",");
                    setAnswer4(arr);
                    correctanswerflag =4;//BUTTON ANSWER 4
                }
                
                if(x1==0)
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    setAnswer(arr);
                }
                else if(x1==1)
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    setAnswer2(arr);
                }
                else if(x1==2)
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    setAnswer3(arr);
                }
                else
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerA");
                    arr = em.replace("\n", ",");
                    setAnswer4(arr);
                }
                
                if(x2==0)
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    setAnswer(arr);
                }
                else if(x2==1)
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    setAnswer2(arr);
                }
                else if(x2==2)
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    setAnswer3(arr);
                }
                else
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerB");
                    arr = em.replace("\n", ",");
                    setAnswer4(arr);
                }
                
                if(x3==0)
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    setAnswer(arr);
                }
                else if(x3==1)
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    setAnswer2(arr);
                }
                else if(x3==2)
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    setAnswer3(arr);
                }
                else
                {
                    em = PracticeDifficultyGUI.rs.getString("AnswerC");
                    arr = em.replace("\n", ",");
                    setAnswer4(arr);
                }
        break;
       }
            counterQuestion++;
        if(counterQuestion == 4)
            {
              System.out.println(" "+counterQuestion+" "+correctQuestions);
              double per = (correctQuestions*100.0/counterQuestion);//percentage of correct questions
              
              int n = JOptionPane.showConfirmDialog(null,per+"% success! Are you feeling ready to compete against the best?","Practise mode has come to an end!",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
              
              if ( n == JOptionPane.YES_OPTION)
              {
                  ModeGUI mgui = new ModeGUI();
                   dispose();
                    mgui.setVisible(true);

                    mgui.setSize(500, 540);
                    mgui.setLocationRelativeTo(null);

                    mgui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
              }
              else
              {
                PracticeDifficultyGUI pdg = new PracticeDifficultyGUI ();
                dispose();
                pdg.setVisible(true);
        
                pdg.setSize(500, 540);
                pdg.setLocationRelativeTo(null);
        
                pdg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
              }
            }    
            
        } 
        catch(Exception e)
        {}
       
    }//GEN-LAST:event_LockAnswerButtonActionPerformed

   
        
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PracticeGamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PracticeGamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PracticeGamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PracticeGamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PracticeGamePlay().setVisible(true);
            }
        });
        
        
        
    }

    //set questions and answers to the test area
    public void setQuestion(String question)
    {
        QuestionArea.setText(question);
    }
    public void setAnswer(String question)
    {
        Answer1.setText(question);
    }
    public void setAnswer2(String question)
    {
        Answer2.setText(question);
    }
    public void setAnswer3(String question)
    {
        Answer3.setText(question);
    }
    public void setAnswer4(String question)
    {
        Answer4.setText(question);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Answer1;
    private javax.swing.JRadioButton Answer2;
    private javax.swing.JRadioButton Answer3;
    private javax.swing.JRadioButton Answer4;
    private javax.swing.JLabel Background;
    private javax.swing.JLabel Bg1;
    private javax.swing.JLabel Bg2;
    private javax.swing.JLabel Bg3;
    private javax.swing.JLabel Bg4;
    private javax.swing.JButton ExitButton;
    private javax.swing.JButton LockAnswerButton;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel QuestionArea;
    private javax.swing.ButtonGroup buttonGroup1;
    // End of variables declaration//GEN-END:variables
}
